
// Boolean and
val boolAnd = (x: Bool) => (y: Bool) => If(Bool, x, y, False);
// Truthy function
val truthy = (x: Bool) => boolAnd(x, True);

val isType = (A: Type) => (x: A) => (f: (x: A) => A) => f(x);

val funcApply = (A: Type) => (B: (x: A) => Type) => (f: (x: A) => B(x)) => (a: A) => f(a);


val natId = (n: Nat) => n;
val exprEqTest = (n: Nat) => isType(Eq(Nat, natId(n), n), Refl(Nat, n));
val funcEqTest = (A: Type) => (Id: (x: A) => A) => isType(Eq(Id, (x: A) => x, funcApply(A, (a: A) => A)), Refl(Id, (x: A) => x));
